@{
    ViewBag.Title = "View Image";
}
@model string

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

<!-- Form for auto-submitting the file path -->
<form id="uploadForm" method="post" asp-controller="Image" asp-action="Upload">
    <input type="hidden" name="filePath" value="@Model" />
</form>

<!-- Bootstrap Modal for Image Viewer -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Image Viewer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="imageViewer" style="width: 100%; max-height: 500px; object-fit: contain;" alt="Image" />
            </div>
        </div>
    </div>
</div>

<!-- Loading Indicator -->
<div id="loadingSpinner" class="d-none text-center my-3">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
    <p>Loading Image...</p>
</div>

<!-- Error Message Container -->
<div id="errorMessage" class="d-none alert alert-danger" role="alert"></div>

<script>
    // Function to show error message
    function showError(message) {
        const errorDiv = document.getElementById("errorMessage");
        errorDiv.textContent = message;
        errorDiv.classList.remove("d-none");
    }

    // Function to hide error message
    function hideError() {
        document.getElementById("errorMessage").classList.add("d-none");
    }

    // Ensure DOM is fully loaded
    document.addEventListener("DOMContentLoaded", () => {
        const uploadForm = document.getElementById("uploadForm");
        const imageModal = window.bootstrap && new bootstrap.Modal(document.getElementById("imageModal"));
        const imageViewer = document.getElementById("imageViewer");
        const loadingSpinner = document.getElementById("loadingSpinner");

        // Check if required elements exist
        if (!uploadForm) {
            showError("Form element not found.");
            return;
        }
        if (!imageModal) {
            showError("Bootstrap modal initialization failed. Ensure Bootstrap JS is loaded.");
            return;
        }
        if (!imageViewer) {
            showError("Image viewer element not found.");
            return;
        }
        if (!window.fetch) {
            showError("Fetch API not supported in this browser.");
            return;
        }

        // Check if filePath is provided
        const filePathInput = uploadForm.querySelector("input[name='filePath']");
        if (!filePathInput || !filePathInput.value) {
            showError("No image file path provided.");
            return;
        }

        // Handle form submission
        uploadForm.addEventListener("submit", async (e) => {
            e.preventDefault(); // Prevent default form submission
            hideError();
            loadingSpinner.classList.remove("d-none");

            try {
                const formData = new FormData(uploadForm);
                const response = await fetch(uploadForm.action, {
                    method: "POST",
                    body: formData
                });

                loadingSpinner.classList.add("d-none");

                if (!response.ok) {
                    throw new Error(`Server error: ${response.status} ${response.statusText}`);
                }

                const data = await response.json();
                if (data.filename) {
                    imageViewer.src = `/images/${data.filename}`;
                    imageModal.show();
                } else {
                    throw new Error("No filename returned from server.");
                }
            } catch (error) {
                loadingSpinner.classList.add("d-none");
                showError(`Failed to load image: ${error.message}`);
                console.error("Error:", error);
            }
        });

        // Trigger form submission
        loadingSpinner.classList.remove("d-none");
        uploadForm.dispatchEvent(new Event("submit"));
    });
</script>